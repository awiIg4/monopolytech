//
//  APITester.swift
//  monopolytech
//
//  Created by eugenio on 17/03/2025.
//

import Foundation
import SwiftUI

/// Classe utilitaire pour tester les fonctionnalit√©s API
class APITester {
    static let shared = APITester()
    private let gameService = GameService.shared
    
    /// Teste la r√©cup√©ration des jeux
    func testFetchGames() async {
        do {
            print("üì± Test de fetchGames()...")
            let games = try await gameService.fetchGames()
            print("‚úÖ R√©cup√©ration r√©ussie de \(games.count) jeux")
            if let firstGame = games.first {
                print("Premier jeu: \(firstGame.licence_name ?? "Inconnu")")
                print("Prix: \(firstGame.prix) ‚Ç¨")
            }
        } catch {
            print("‚ùå Erreur lors de la r√©cup√©ration des jeux: \(error.localizedDescription)")
        }
    }
    
    /// Teste la r√©cup√©ration des d√©tails d'un jeu
    func testFetchGameDetails() async {
        do {
            print("üì± Test pr√©alable de fetchGames() pour obtenir un ID...")
            let games = try await gameService.fetchGames()
            
            guard let firstGame = games.first, let id = firstGame.id else {
                print("‚ùå Aucun jeu disponible pour tester les d√©tails")
                return
            }
            
            print("üì± Test de fetchGame(id: \(id))...")
            let gameDetails = try await gameService.fetchGame(id: id)
            print("‚úÖ R√©cup√©ration r√©ussie des d√©tails du jeu: \(gameDetails.licence_name ?? "Inconnu")")
        } catch {
            print("‚ùå Erreur lors de la r√©cup√©ration des d√©tails du jeu: \(error.localizedDescription)")
        }
    }
    
    /// Teste l'acc√®s √† la liste des utilisateurs
    func testGetUsers() async {
        print("üì± Test du point d'acc√®s '/utilisateurs'...")
        
        do {
            // Tente d'acc√©der au point d'acc√®s des utilisateurs (le token d'authentification sera utilis√© s'il est pr√©sent dans APIService)
            let (responseData, statusCode, _) = try await APIService.shared.requestWithHeaders(
                "utilisateurs", 
                httpMethod: "GET"
            )
            
            if (200...299).contains(statusCode) {
                print("‚úÖ Acc√®s r√©ussi au point d'acc√®s des utilisateurs avec statut: \(statusCode)")
                let responseString = String(data: responseData, encoding: .utf8) ?? "Pas de donn√©es"
                print("Aper√ßu de la r√©ponse: \(responseString.prefix(200))...")
                
                // Tente d'analyser les donn√©es des utilisateurs
                do {
                    let decoder = JSONDecoder()
                    let users = try decoder.decode([User].self, from: responseData)
                    print("‚úÖ Analyse r√©ussie de \(users.count) utilisateurs")
                } catch {
                    print("‚ö†Ô∏è Impossible d'analyser les donn√©es des utilisateurs: \(error.localizedDescription)")
                    print("R√©ponse brute: \(responseString)")
                }
            } else {
                print("‚ùå √âchec de l'acc√®s au point d'acc√®s des utilisateurs. Statut: \(statusCode)")
            }
        } catch {
            print("‚ùå Erreur lors de la r√©cup√©ration des utilisateurs: \(error.localizedDescription)")
        }
    }
    
    // Cette m√©thode peut √™tre d√©comment√©e une fois que vous avez un CategoryService
    /*
    func testFetchCategories() async {
        do {
            print("üì± Test de fetchCategories()...")
            let categories = try await CategoryService.shared.fetchCategories()
            print("‚úÖ R√©cup√©ration r√©ussie de \(categories.count) cat√©gories")
            print("Cat√©gories: \(categories.map { $0.name })")
        } catch {
            print("‚ùå Erreur lors de la r√©cup√©ration des cat√©gories: \(error.localizedDescription)")
        }
    }
    */
    
    /// Ex√©cute tous les tests disponibles
    func runAllTests() async {
        await testFetchGames()
        print("\n-------------------\n")
        await testFetchGameDetails()
        print("\n-------------------\n")
        await testGetUsers()
        // D√©commentez lorsque CategoryService est impl√©ment√©
        // print("\n-------------------\n")
        // await testFetchCategories()
    }
}
